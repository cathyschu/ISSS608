[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to Cathy‚Äôs portfolio for ISSS608 Visual Analytics and Applications.\nThis webpage is a portfolio recording my course work for an Analytics course (ISSS608 Visual Analytics and Application) at Singapore Management University.\nIn this website, you will find the exercises, assignments and projects published during the course. Welcome to connect with me to discuss questions and insights about analytics!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Cathy Chu",
    "section": "",
    "text": "My name is Cathy.\nCreating cute illustrations in my spare time is one of my favourite hobbies."
  },
  {
    "objectID": "Hands-on_Ex/Hands on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Getting started.\nLoading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)\n\nImporting data\nCode chunk below uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\n\nrealis_csv &lt;- read.csv(\"data/REALIS2019.csv\") #old way - utility &gt; avoid using this.\n\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\nrealis2019 &lt;- read_csv2(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")\n\nPivoting data\n\npopdata_long &lt;- popdata_fat %&gt;% \n  #what is %&gt;%? allows to combine functions together. e.g. call this file and do pivot_longer.\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\") \n\nCreate rds file\n\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\") #reading rds is faster."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started.",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started.",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Importing data",
    "text": "Importing data\nCode chunk below uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\n\nrealis_csv &lt;- read.csv(\"data/REALIS2019.csv\") #old way - utility &gt; avoid using this.\n\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Pivoting data",
    "text": "Pivoting data\n\npopdata_long &lt;- popdata_fat %&gt;% \n  #what is %&gt;%? allows to combine functions together. e.g. call this file and do pivot_longer.\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\") \n\nCreate rds file\n\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\") #reading rds is faster."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\nselect, filter, arrange, mutate (compute), group_by, summarise, join.\n\nrealis2019_selected &lt;- realis2019 %&gt;%\n  select(`Project Name`,\n         `Transacted Price ($)`,\n         `Type of Sale`,\n         `Unit Price ($ psm)`,\n         `Property Type`)\nrealis2019_selected\n\n# A tibble: 19,515 √ó 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING‚Ä¶                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING‚Ä¶                2300000 Resale                         9935\n# ‚Ñπ 19,505 more rows\n# ‚Ñπ 1 more variable: `Property Type` &lt;chr&gt;\n\n\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\n  filter(`Property Type` == \"Condominium\" | \n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"New Sale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)\n\n\nPutting all together"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "üîë pacman package has been installed in the workshop, using the following code.\n\npacman::p_load(tidyverse)\n\n\n\n\nread_csv is a function of readr package, which is from the tidyverse package.\nThe dataset Exam_data.csv, containing exam grades of P3 students from a Singapore local school is imported into R environment.\nüîë The code chunk below was used to import the dataset.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nMATHS\nENGLISH\nSCIENCE\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n1\n\n\n\n\n\n\n\n\nggplot2 is part of the tidyverse family specially designed for visual exploration and communication. It creates graphics based on The Grammar of Graphics.\n\n\n\n\n\n\nCheatsheet for ggplot2 (Learn more)\n\n\n\n\n\n\n\n\n\n\n\n\nüîë Observe how R Graphics and ggplot are different when plotting a simple histogram. An example below:\n\nR Grahpicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + \n  geom_histogram(bins=10,\n                 boundary=100,\n                 color=\"snow4\",\n                 fill=\"mistyrose\") +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùì What is a statistical graphic?\nUnderstanding the principles of grammar of graphics: a general scheme for data visualisation which breaks up graphs into semantic components such as scales and layers.\nIt was introduced by Leland Wlkinson (1999). It defines the rules of structural mathematical and aesthetic elements into a meaningful graph.\n\n\n\n\n\n\nNote\n\n\n\nTwo principles in grammar of graphics are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nA good grammar of graphics has the following characters:\n\nAllows us to gain insights into the composition of complicated graphics.\nReveals unexpected connections between seemingly different graphics (Cox 1978).\nProvides a strong foundation for understanding a diverse range of graphics.\nMay also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n\n\n\n\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\n\n\n\n\nImportant\n\n\n\nA short description of each building blocks:\n\nData: the dataset being plotted.\nAesthetic: takes attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: the visual elements used for our data, such as point, bar or line.\nFacets: split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems: define the plan on which data are mapped on the graphic.\nThemes: modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background.\n\n\n\n\n\n\n\n\nüîë Calling the ggplot() function, using the code chunk below:\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not aleady a data.frame, it will be converted to one by fortify().\n\n\n\n\n\n\n\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can this encode an aspect of the data and be used to convey information.\n\nAll aesthetic of a plot are specified in the aes() function call.\n\n\n\nüöÄ Usage aes(x,y,‚Ä¶)\nThe names for x and y aesthetics are typically omitted because they are so common; all other aesthetics must be named.\n\nEach geom layer can have its own aes specification.\n\nüîë Code chunk below adds the aesthetic element into the plot.\n\n\nüöÄ To display line numbers alongside the code block, can use the code-line-numbers attribute.\nFor example, {.r code-line-numbers=\"true\"}\nggplot(data=exam_data,\n       aes(x = MATHS))\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis‚Äôs label.\n\n\n\n\n\n\n\n\n\nAesthetic specifications\n\n\n\nResources\n\n\n\n\n\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g., a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (data can be accessed for these maps by using the map_data() function).\nA plot must have one geom, but there is no limit. Add a geom to a plot using the + operator.\n\n\n\nü¶Ñ Complete list of geom layers\n\n\n\n\n\n\n\nR colors\n\n\n\nColor codes for R as a resource. \n\ncl &lt;- colors()\nlength(cl); cl[1:20] #display 1-20\n\n[1] 657\n\n\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"   \"aquamarine3\"   \"aquamarine4\"  \n[13] \"azure\"         \"azure1\"        \"azure2\"        \"azure3\"       \n[17] \"azure4\"        \"beige\"         \"bisque\"        \"bisque1\"      \n\n\n\n\n\n\nüîë Code chunk below to plot a bar chart using geom_bar()\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n‚ùì Code won‚Äôt run when using {r code-line-numbers=\"true\"}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics-ggplot2-methods",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "üîë pacman package has been installed in the workshop, using the following code.\n\npacman::p_load(tidyverse)\n\n\n\n\nread_csv is a function of readr package, which is from the tidyverse package.\nThe dataset Exam_data.csv, containing exam grades of P3 students from a Singapore local school is imported into R environment.\nüîë The code chunk below was used to import the dataset.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nMATHS\nENGLISH\nSCIENCE\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n1\n\n\n\n\n\n\n\n\nggplot2 is part of the tidyverse family specially designed for visual exploration and communication. It creates graphics based on The Grammar of Graphics.\n\n\n\n\n\n\nCheatsheet for ggplot2 (Learn more)\n\n\n\n\n\n\n\n\n\n\n\n\nüîë Observe how R Graphics and ggplot are different when plotting a simple histogram. An example below:\n\nR Grahpicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + \n  geom_histogram(bins=10,\n                 boundary=100,\n                 color=\"snow4\",\n                 fill=\"mistyrose\") +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùì What is a statistical graphic?\nUnderstanding the principles of grammar of graphics: a general scheme for data visualisation which breaks up graphs into semantic components such as scales and layers.\nIt was introduced by Leland Wlkinson (1999). It defines the rules of structural mathematical and aesthetic elements into a meaningful graph.\n\n\n\n\n\n\nNote\n\n\n\nTwo principles in grammar of graphics are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nA good grammar of graphics has the following characters:\n\nAllows us to gain insights into the composition of complicated graphics.\nReveals unexpected connections between seemingly different graphics (Cox 1978).\nProvides a strong foundation for understanding a diverse range of graphics.\nMay also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n\n\n\n\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\n\n\n\n\nImportant\n\n\n\nA short description of each building blocks:\n\nData: the dataset being plotted.\nAesthetic: takes attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: the visual elements used for our data, such as point, bar or line.\nFacets: split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems: define the plan on which data are mapped on the graphic.\nThemes: modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background.\n\n\n\n\n\n\n\n\nüîë Calling the ggplot() function, using the code chunk below:\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not aleady a data.frame, it will be converted to one by fortify().\n\n\n\n\n\n\n\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can this encode an aspect of the data and be used to convey information.\n\nAll aesthetic of a plot are specified in the aes() function call.\n\n\n\nüöÄ Usage aes(x,y,‚Ä¶)\nThe names for x and y aesthetics are typically omitted because they are so common; all other aesthetics must be named.\n\nEach geom layer can have its own aes specification.\n\nüîë Code chunk below adds the aesthetic element into the plot.\n\n\nüöÄ To display line numbers alongside the code block, can use the code-line-numbers attribute.\nFor example, {.r code-line-numbers=\"true\"}\nggplot(data=exam_data,\n       aes(x = MATHS))\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis‚Äôs label.\n\n\n\n\n\n\n\n\n\nAesthetic specifications\n\n\n\nResources\n\n\n\n\n\n\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g., a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (data can be accessed for these maps by using the map_data() function).\nA plot must have one geom, but there is no limit. Add a geom to a plot using the + operator.\n\n\n\nü¶Ñ Complete list of geom layers\n\n\n\n\n\n\n\nR colors\n\n\n\nColor codes for R as a resource. \n\ncl &lt;- colors()\nlength(cl); cl[1:20] #display 1-20\n\n[1] 657\n\n\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"   \"aquamarine3\"   \"aquamarine4\"  \n[13] \"azure\"         \"azure1\"        \"azure2\"        \"azure3\"       \n[17] \"azure4\"        \"beige\"         \"bisque\"        \"bisque1\"      \n\n\n\n\n\n\nüîë Code chunk below to plot a bar chart using geom_bar()\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n‚ùì Code won‚Äôt run when using {r code-line-numbers=\"true\"}"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#getting-started",
    "title": "Hands-on_Ex01",
    "section": "1.2 Getting started",
    "text": "1.2 Getting started\n\n1.2.1 Installing and loading the required libraries\nüîë pacman package has been installed in the workshop, using the following code.\n\npacman::p_load(tidyverse)\n\n\n\n1.2.2 Importing data\nread_csv is a function of readr package, which is from the tidyverse package.\nThe dataset Exam_data.csv, containing exam grades of P3 students from a Singapore local school is imported into R environment.\nüîë The code chunk below was used to import the dataset.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nMATHS\nENGLISH\nSCIENCE\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n1"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#introducing-ggplot",
    "title": "Hands-on_Ex01",
    "section": "1.3 Introducing ggplot",
    "text": "1.3 Introducing ggplot\nggplot2 is part of the tidyverse family specially designed for visual exploration and communication. It creates graphics based on The Grammar of Graphics.\n\n\n\n\n\n\nCheatsheet for ggplot2 (Learn more)\n\n\n\n\n\n\n\n\n\n\n\n1.3.1 R Graphics vs.¬†ggplot\nüîë Observe how R Graphics and ggplot are different when plotting a simple histogram. An example below:\n\nR Grahpicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + \n  geom_histogram(bins=10,\n                 boundary=100,\n                 color=\"snow4\",\n                 fill=\"mistyrose\") +\n  ggtitle(\"Distribution of Math Scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#grammar-of-graphics",
    "title": "Hands-on_Ex01",
    "section": "1.4 Grammar of Graphics",
    "text": "1.4 Grammar of Graphics\n‚ùì What is a statistical graphic?\nUnderstanding the principles of grammar of graphics: a general scheme for data visualisation which breaks up graphs into semantic components such as scales and layers.\nIt was introduced by Leland Wlkinson (1999). It defines the rules of structural mathematical and aesthetic elements into a meaningful graph.\n\n\n\n\n\n\nNote\n\n\n\nTwo principles in grammar of graphics are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nA good grammar of graphics has the following characters:\n\nAllows us to gain insights into the composition of complicated graphics.\nReveals unexpected connections between seemingly different graphics (Cox 1978).\nProvides a strong foundation for understanding a diverse range of graphics.\nMay also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n\n\n\n1.4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\n\n\n\n\nImportant\n\n\n\nA short description of each building blocks:\n\nData: the dataset being plotted.\nAesthetic: takes attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: the visual elements used for our data, such as point, bar or line.\nFacets: split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems: define the plan on which data are mapped on the graphic.\nThemes: modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-data",
    "title": "Hands-on_Ex01",
    "section": "1.5 Essential Grammatical Elements in ggplot2: data",
    "text": "1.5 Essential Grammatical Elements in ggplot2: data\nüîë Calling the ggplot() function, using the code chunk below:\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not aleady a data.frame, it will be converted to one by fortify()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-aesthetic-mappings",
    "title": "Hands-on_Ex01",
    "section": "1.6 Essential Grammatical Elements in ggplot2: Aesthetic mappings",
    "text": "1.6 Essential Grammatical Elements in ggplot2: Aesthetic mappings\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can this encode an aspect of the data and be used to convey information.\n\nAll aesthetic of a plot are specified in the aes() function call.\n\n\n\nüöÄ Usage aes(x,y,‚Ä¶)\nThe names for x and y aesthetics are typically omitted because they are so common; all other aesthetics must be named.\n\nEach geom layer can have its own aes specification.\n\nüîë Code chunk below adds the aesthetic element into the plot.\n\n\nüöÄ To display line numbers alongside the code block, can use the code-line-numbers attribute.\nFor example, {.r code-line-numbers=\"true\"}\nggplot(data=exam_data,\n       aes(x = MATHS))\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis‚Äôs label.\n\n\n\n\n\n\n\n\n\nAesthetic specifications\n\n\n\nResources"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-geom",
    "title": "Hands-on_Ex01",
    "section": "1.7 Essential Grammatical Elements in ggplot2: geom",
    "text": "1.7 Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g., a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (data can be accessed for these maps by using the map_data() function).\nA plot must have one geom, but there is no limit. Add a geom to a plot using the + operator.\n\n\n\nü¶Ñ Complete list of geom layers\n\n\n\n\n\n\n\nR colors\n\n\n\nColor codes for R as a resource. \n\ncl &lt;- colors()\nlength(cl); cl[1:20] #display 1-20\n\n[1] 657\n\n\n [1] \"white\"         \"aliceblue\"     \"antiquewhite\"  \"antiquewhite1\"\n [5] \"antiquewhite2\" \"antiquewhite3\" \"antiquewhite4\" \"aquamarine\"   \n [9] \"aquamarine1\"   \"aquamarine2\"   \"aquamarine3\"   \"aquamarine4\"  \n[13] \"azure\"         \"azure1\"        \"azure2\"        \"azure3\"       \n[17] \"azure4\"        \"beige\"         \"bisque\"        \"bisque1\"      \n\n\n\n\n\n1.7.1 Geometric Objects: geom_bar\nüîë Code chunk below to plot a bar chart using geom_bar()\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n‚ùì Code won‚Äôt run when using {r code-line-numbers=\"true\"}\n\n\n1.7.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nüîë geom_dotplot() of ggplot2 is used to plot a dot plot with the code chunk below.\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBe warned\n\n\n\nThe y scale could be misleading, so isn‚Äôt useful.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following 2 steps:\n\nscale_y_continuous() is sued to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\n\n\n\n\n\n\n\n\n\n1.7.3 Geometric Objects: geom_histogram()\nüîë In the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\n\nüöÄ Histograms (geom_histogram()) display the counts with bars; frequency polygons (geom_freqpoly()) display the counts with lines.\nFrequency polygons are more suitable when you want to compare the distribution across the levels of a categorical variable.\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\n1.7.4 Modify a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black.\n\nggplot(data=exam_data,\n       aes(x = MATHS)) + \n  geom_histogram(bins=20,\n                 color=\"black\",\n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n\n1.7.5 Modify a geometric object by changing aes()\nThe code chunk below changes the interior colour of t he histogram (i.e.¬†fill) by using sub-group of aesthetic().\nggplot(data=exam_data,\n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins=20,\n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe approach can be used to colour, fill and alpha of the geometric.\n\n\n\n\n1.7.6 Geometric Objects: geom_density()\ngeom_density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\n\n\nü¶Ñ geom-density() understands the following aesthetics: x, y, alpha, colour, fill, group, linetype, linewidth, weight.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\nüîë The code below plots the distribution of Maths scores in a kernel density estimate plot.\nggplot(data=exam_data,\n       aes(x = MATHS)) + \n  geom_density()\n\n\n\n\n\n\n\n\n\nüîë The code chunk below plots two kernel density lines by using colour or fill arguments of aes()\nggplot(data=exam_data,\n       aes(x = MATHS,\n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n\n\n1.7.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all ‚Äúoutlying‚Äù points individually.\n\n\nü¶Ñ geom_boxplot() understands the following aesthetics:\nx or y, lower or xlower, upper or xupper, middle or xmiddle, ymin or xmin, ymax or xmax, alpha, colour, fill, group, linetype, linewidth, shape, size, weight.\nüîë The code chunk below plots boxplots by using geom_boxplot()\nggplot(data=exam_data,\n       aes(y = MATHS,\n           x = GENDER)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nüîë The code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\nggplot(data=exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n1.7.8 Geometric Objects: geom_violin\ngeom_violin() is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it‚Äôs easier to compare several distributions since they‚Äôre placed side by side.\n\n\ngeom_violin() understands the following aesthetics:\nx, y, alpha, colour, fill, group, linetype, linewidth,weight.\nüîë The code below plot the distribution of Maths score by gender in violin plot.\nggplot(data=exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_violin()\n\n\n\n\n\n\n\n\n\n\n\n1.7.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot. The scatterplot is most useful for displaying the relationship between two continuous variables.\n\n\nü¶Ñ geom_point() can be used to compare one continuous and one categorical variable, or two categorical variables, but a variation like geom_jitter(), geom_count(), or geom_bin_2d() is usually more appropriate.\nA bubblechart is a scatterplot with a third variable mapped to the size of points.\nüîë The code chunk below plots a scatterplot showing that Maths and English grades of pupils by using geom_point().\nggplot(data=exam_data,\n       aes(x= MATHS,\n           y= ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\n1.7.10 Geometric objects can be combined\n\n\nüê≥ AMAZING\nüîë The code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\nggplot(data=exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nüíä Point size in actual figure = 0.3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#amazing",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#amazing",
    "title": "Hands-on_Ex01",
    "section": "üê≥ AMAZING",
    "text": "üê≥ AMAZING\nüîë The code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\nggplot(data=exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\nüíä Point size in actual figure = 0.3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-stat",
    "title": "Hands-on_Ex01",
    "section": "1.8 Essential Grammatical Elements in ggplot2: stat",
    "text": "1.8 Essential Grammatical Elements in ggplot2: stat\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nFrequencey of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n1.8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data,\n       aes(y = MATHS, x = GENDER)) + \n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n1.8.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\nstat_summary() operates on unique x or y; stat_summary_bin() operates on binned x or y. They are more flexible versions of stat_bin(): instead of just counting, they can compute any aggregate.\n\nggplot(data=exam_data,\n       aes(y = MATHS, x = GENDER)) + \n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun = \"mean\",\n               colour = \"red\",\n               size = 4)\n\n\n\n\n\n\n\n\n\n\n1.8.3 Working with the stat - the geom() method\nThe code chunk below adds mean values by using geom_() function and overriding the default stat.\n\nggplot(data=exam_data,\n       aes(y = MATHS, x = GENDER)) + \n  geom_boxplot() +\n  geom_point(stat = \"summary\",\n             fun = \"mean\",\n             colour = \"red\",\n             size = 4)\n\n\n\n\n\n\n\n\n\n\n1.8.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\n\n‚ùì Unable to adjust scale\n\n\n\n\n\n\n\n\n\nüîë In the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\nggplot(data=exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe default method used is loess.\ngeom_smooth(method = \"loess\")\n\n\nüîë The default smoothing method can be overridden as shown below.\nggplot(data=exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-facets",
    "title": "Hands-on_Ex01",
    "section": "1.9 Essential Grammatical Elements in ggplot2: Facets",
    "text": "1.9 Essential Grammatical Elements in ggplot2: Facets\nFacetting generates small multiples (sometimes also called treillis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot suppoorts two types of facets, namely: facet_grid() and facet_wrap().\n\n1.9.1 Working with facet_wrap()\nfacet_wrap() wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nüîë The code chunk below plots a trellis plot using facet_wrap().\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20) + \n  facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n1.9.2 facet_grid() function\nfacet_grid() forms a matrix of panels defined by row and columns facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nüîë The code chunk below plots a trellis plot using facet_grid() .\n\n\nü¶Ñ If you have only one variable with many levels, try facet_wrap().\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20) +\n  facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\nü¶ñ PRACTICE\n\nggplot(data=exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point(size=0.8, colour=\"skyblue\") +\n  facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-on_Ex01",
    "section": "1.9.1 Working with facet_wrap()",
    "text": "1.9.1 Working with facet_wrap()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid-function",
    "title": "Hands-on_Ex01",
    "section": "1.9.2 facet_grid() function",
    "text": "1.9.2 facet_grid() function"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-coordinates",
    "title": "Hands-on_Ex01",
    "section": "1.10 Essential Grammatical Elements in ggplot2: Coordinates",
    "text": "1.10 Essential Grammatical Elements in ggplot2: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n\ncoord_cartesian(): the default cartesian coordinate systems, where you specify x and y values (e.g.¬†allows you to zoom in or out.)\ncoord_flip(): a cartesian system with the x and y flipped.\ncoord_fixed(): a cartesian system with a ‚Äúfixed‚Äù aspect ratio (e.g.¬†1.78 for a ‚Äúwidescreen‚Äù plot).\ncoord_quickmap(): a coordinate system that approximates a good aspect ratio for maps.\n\n\n1.10.1 Working with Coordinate\nBy the default, the bar chart of ggplot2 is in vertical form.\n\nggplot(data=exam_data,\n       aes(x = RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nüîë The code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\nggplot(data=exam_data,\n       aes(x = RACE)) +\n  geom_bar(color=\"gray\",fill=\"skyblue\") +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n1.10.2 Changing the y- and x-axis range\nThe scatterplot on the right is slightly misleading because the y-axis range are not equal.\n\nggplot(data=exam_data,\n       aes(x = MATHS, y = ENGLISH)) +\n  geom_point(size = 1) +\n  geom_smooth(method = lm, size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-on_Ex01",
    "section": "1.10.1 Working with Coordinate",
    "text": "1.10.1 Working with Coordinate"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-on_Ex01",
    "section": "1.10.2 Changing the y- and x-axis range",
    "text": "1.10.2 Changing the y- and x-axis range"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#essential-grammatical-elements-in-ggplot2-themes",
    "title": "Hands-on_Ex01",
    "section": "1.11 Essential Grammatical Elements in ggplot2: themes",
    "text": "1.11 Essential Grammatical Elements in ggplot2: themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize fnts\ngridlines\ncolour of labels\n\nBuilt-in themes include -theme_gray()(default)-theme_bw()-theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived f as either a line (e.g.¬†x-axis), a rectangle (e.g.¬†graph background), or text (e.g.¬†axis title).\n\n1.11.1 Working with theme\nüîë The code chunk below plot a horizontal bar chart using theme_gray().\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nüîë A horizontal bar chart plotted using theme_classic().\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nüîë A horizontal bar chart plotted using theme_minimal().\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\nggplot(data=exam_data,\n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-theme",
    "title": "Hands-on_Ex01",
    "section": "1.11.1 Working with theme",
    "text": "1.11.1 Working with theme"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#reference",
    "title": "Hands-on_Ex01",
    "section": "1.12 Reference",
    "text": "1.12 Reference\n\nHadley Wickham (2023) ggplot2: Elegant Graphics for Data Analysis. Online 3rd edition.\nWinston Chang (2013) R Graphics Cookbook 2nd edition. Online version.\nHealy, Kieran (2019) Data Visualization: A practical introduction. Online version\nLearning ggplot2 on Paper ‚Äì Components\nLearning ggplot2 on Paper ‚Äì Layer\nLearning ggplot2 on Paper ‚Äì Scale"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Cathy Chu",
    "section": "Education",
    "text": "Education\nSingapore Management University | Masters of IT in Business | Expected Dec 2025"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Cathy Chu",
    "section": "Experience",
    "text": "Experience\nMultiple MNCs | Program Manager, Training instructor | Singapore"
  }
]