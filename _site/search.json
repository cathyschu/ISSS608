[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608 Visual Analytics and Applications",
    "section": "",
    "text": "Welcome to Cathy‚Äôs portfolio for ISSS608 Visual Analytics and Applications.\nIn this website, you will find the exercises, assignments and projects published during the course. Welcome to connect with me to discuss questions and insights about analytics!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "My name is Cathy. This webpage is a portfolio recording my course work for an Analytics course (ISSS608 Visual Analytics and Application) at Singapore Management University."
  },
  {
    "objectID": "Hands-on_Ex/Hands on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Getting started.\nLoading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)\n\nImporting data\nCode chunk below uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\n\nrealis_csv &lt;- read.csv(\"data/REALIS2019.csv\") #old way - utility &gt; avoid using this.\n\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\nrealis2019 &lt;- read_csv2(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")\n\nPivoting data\n\npopdata_long &lt;- popdata_fat %&gt;% \n  #what is %&gt;%? allows to combine functions together. e.g. call this file and do pivot_longer.\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\") \n\nCreate rds file\n\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\") #reading rds is faster."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started.",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#getting-started.",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "",
    "text": "Loading tidyverse onto r environment by using the code chunk below.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#importing-data",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Importing data",
    "text": "Importing data\nCode chunk below uses read_csv() of readr to import REALIS2019.csv into r environment as a tibble data.frame.\n\nrealis_csv &lt;- read.csv(\"data/REALIS2019.csv\") #old way - utility &gt; avoid using this.\n\n\nrealis2019 &lt;- read_csv(\"data/REALIS2019.csv\")\n\n\npopdata_fat &lt;- read_csv(\"data/PopData2019_fat.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#pivoting-data",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Pivoting data",
    "text": "Pivoting data\n\npopdata_long &lt;- popdata_fat %&gt;% \n  #what is %&gt;%? allows to combine functions together. e.g. call this file and do pivot_longer.\n  pivot_longer(c(3:21),\n               names_to = \"Age Group\",\n               values_to = \"Population\") \n\nCreate rds file\n\nwrite_rds(popdata_long, \"data/rds/popdata_long.rds\") #reading rds is faster."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "href": "Hands-on_Ex/Hands-on_Ex00/Hands-on_Ex00.html#working-with-dplyr",
    "title": "Hands-on Exercise 00: working with tidyverse",
    "section": "Working with dplyr",
    "text": "Working with dplyr\nselect, filter, arrange, mutate (compute), group_by, summarise, join.\n\nrealis2019_selected &lt;- realis2019 %&gt;%\n  select(`Project Name`,\n         `Transacted Price ($)`,\n         `Type of Sale`,\n         `Unit Price ($ psm)`,\n         `Property Type`)\nrealis2019_selected\n\n# A tibble: 19,515 √ó 5\n   `Project Name`     `Transacted Price ($)` `Type of Sale` `Unit Price ($ psm)`\n   &lt;chr&gt;                               &lt;dbl&gt; &lt;chr&gt;                         &lt;dbl&gt;\n 1 PEIRCE VIEW                        840000 Resale                         7434\n 2 FLORIDA PARK                      3040000 Resale                         9737\n 3 BULLION PARK                       860000 Resale                        11467\n 4 CASTLE GREEN                      1000000 Resale                         9346\n 5 HAPPY ESTATE                      7000000 Resale                        10183\n 6 TEACHER'S HOUSING‚Ä¶                2880000 Resale                        12659\n 7 THE PANORAMA                      1510000 Resale                        16064\n 8 THE PANORAMA                       710000 Resale                        16905\n 9 CHIP THYE GARDEN                  2800000 Resale                        13500\n10 TEACHER'S HOUSING‚Ä¶                2300000 Resale                         9935\n# ‚Ñπ 19,505 more rows\n# ‚Ñπ 1 more variable: `Property Type` &lt;chr&gt;\n\n\n\nrealis2019_filtered &lt;- realis2019_selected %&gt;%\n  filter(`Property Type` == \"Condominium\" | \n           `Property Type` == \"Apartment\") %&gt;%\n  filter(`Type of Sale` == \"New Sale\") %&gt;%\n  filter(`Unit Price ($ psm)` &lt;= 13000)\n\n\nPutting all together"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "üîë pacman package has been installed in the workshop, using the following code.\n\npacman::p_load(tidyverse)\n\n\n\n\nread_csv is a function of readr package, which is from the tidyverse package.\nThe dataset Exam_data.csv, containing exam grades of P3 students from a Singapore local school is imported into R environment.\nüîë The code chunk below was used to import the dataset.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nMATHS\nENGLISH\nSCIENCE\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n1\n\n\n\n\n\n\n\n\nggplot2 is part of the tidyverse family specially designed for visual exploration and communication. It creates graphics based on The Grammar of Graphics.\n\n\n\n\n\n\nCheatsheet for ggplot2 (Learn more)\n\n\n\n\n\n\n\n\n\n\n\n\nüîë Observe how R Graphics and ggplot are different when plotting a simple histogram. An example below:\n\nR Grahpicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + \n  geom_histogram(bins=10,\n                 boundary=100,\n                 color=\"snow4\",\n                 fill=\"mistyrose\") +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR colors\n\n\n\nColor codes for R as a resource.\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùì What is a statistical graphic?\nUnderstanding the principles of grammar of graphics: a general scheme for data visualisation which breaks up graphs into semantic components such as scales and layers.\nIt was introduced by Leland Wlkinson (1999). It defines the rules of structural mathematical and aesthetic elements into a meaningful graph.\n\n\n\n\n\n\nNote\n\n\n\nTwo principles in grammar of graphics are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nA good grammar of graphics has the following characters:\n\nAllows us to gain insights into the composition of complicated graphics.\nReveals unexpected connections between seemingly different graphics (Cox 1978).\nProvides a strong foundation for understanding a diverse range of graphics.\nMay also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n\n\n\n\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\n\n\n\n\nImportant\n\n\n\nA short description of each building blocks:\n\nData: the dataset being plotted.\nAesthetic: takes attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: the visual elements used for our data, such as point, bar or line.\nFacets: split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems: define the plan on which data are mapped on the graphic.\nThemes: modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background.\n\n\n\n\n\n\n\n\nüîë Calling the ggplot() function, using the code chunk below:\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not aleady a data.frame, it will be converted to one by fortify().\n\n\n\n\n\n\n\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can this encode an aspect of the data and be used to convey information.\n\nAll aesthetic of a plot are specified in the aes() function call.\n\n\n\nüöÄ Usage aes(x,y,‚Ä¶)\nThe names for x and y aesthetics are typically omitted because they are so common; all other aesthetics must be named.\n\nEach geom layer can have its own aes specification.\n\nüîë Code chunk below adds the aesthetic element into the plot.\n\n\nüöÄ To display line numbers alongside the code block, can use the code-line-numbers attribute.\nFor example, {.r code-line-numbers=\"true\"}\nggplot(data=exam_data,\n       aes(x = MATHS))\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis‚Äôs label.\n\n\n\n\n\n\n\n\n\nAesthetic specifications\n\n\n\nResources"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics-ggplot2-methods",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics-ggplot2-methods",
    "title": "Hands-on_Ex01",
    "section": "",
    "text": "üîë pacman package has been installed in the workshop, using the following code.\n\npacman::p_load(tidyverse)\n\n\n\n\nread_csv is a function of readr package, which is from the tidyverse package.\nThe dataset Exam_data.csv, containing exam grades of P3 students from a Singapore local school is imported into R environment.\nüîë The code chunk below was used to import the dataset.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nMATHS\nENGLISH\nSCIENCE\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n1\n\n\n\n\n\n\n\n\nggplot2 is part of the tidyverse family specially designed for visual exploration and communication. It creates graphics based on The Grammar of Graphics.\n\n\n\n\n\n\nCheatsheet for ggplot2 (Learn more)\n\n\n\n\n\n\n\n\n\n\n\n\nüîë Observe how R Graphics and ggplot are different when plotting a simple histogram. An example below:\n\nR Grahpicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) + \n  geom_histogram(bins=10,\n                 boundary=100,\n                 color=\"snow4\",\n                 fill=\"mistyrose\") +\n  ggtitle(\"Distribution of Math Scores\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR colors\n\n\n\nColor codes for R as a resource.\n\n\n\n\n\n\n\n\n\n\n\n\n‚ùì What is a statistical graphic?\nUnderstanding the principles of grammar of graphics: a general scheme for data visualisation which breaks up graphs into semantic components such as scales and layers.\nIt was introduced by Leland Wlkinson (1999). It defines the rules of structural mathematical and aesthetic elements into a meaningful graph.\n\n\n\n\n\n\nNote\n\n\n\nTwo principles in grammar of graphics are:\n\nGraphics = distinct layers of grammatical elements\nMeaningful plots through aesthetic mapping\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nA good grammar of graphics has the following characters:\n\nAllows us to gain insights into the composition of complicated graphics.\nReveals unexpected connections between seemingly different graphics (Cox 1978).\nProvides a strong foundation for understanding a diverse range of graphics.\nMay also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics.\n\n\n\n\n\nggplot2 is an implementation of Leland Wilkinson‚Äôs Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) ‚ÄúA layered grammar of graphics.‚Äù Journal of Computational and Graphical Statistics, vol.¬†19, no. 1, pp.¬†3‚Äì28.\n\n\n\n\n\n\nImportant\n\n\n\nA short description of each building blocks:\n\nData: the dataset being plotted.\nAesthetic: takes attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: the visual elements used for our data, such as point, bar or line.\nFacets: split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics: statistical transformations that summarise data (e.g.¬†mean, confidence intervals).\nCoordinate systems: define the plan on which data are mapped on the graphic.\nThemes: modify all non-data components of a plot, such as main title, sub-title, y-axis title, or legend background.\n\n\n\n\n\n\n\n\nüîë Calling the ggplot() function, using the code chunk below:\n\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not aleady a data.frame, it will be converted to one by fortify().\n\n\n\n\n\n\n\nThe aesthetic mappings take attributes of the data and use them to influence visual characteristics, such as position, colour, size, shape, or transparency. Each visual characteristic can this encode an aspect of the data and be used to convey information.\n\nAll aesthetic of a plot are specified in the aes() function call.\n\n\n\nüöÄ Usage aes(x,y,‚Ä¶)\nThe names for x and y aesthetics are typically omitted because they are so common; all other aesthetics must be named.\n\nEach geom layer can have its own aes specification.\n\nüîë Code chunk below adds the aesthetic element into the plot.\n\n\nüöÄ To display line numbers alongside the code block, can use the code-line-numbers attribute.\nFor example, {.r code-line-numbers=\"true\"}\nggplot(data=exam_data,\n       aes(x = MATHS))\n\n\n\n\n\n\nNote\n\n\n\n\nggplot includes the x-axis and the axis‚Äôs label.\n\n\n\n\n\n\n\n\n\nAesthetic specifications\n\n\n\nResources"
  }
]