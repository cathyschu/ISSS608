{
  "hash": "f3c9133bdad9ade62aa3cb95cc9ecc07",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Ex03\"\nauthor: \"Cathy C\"\ndate-modified: \"last-modified\" \nexecute:\n  echo: true \n  eval: true \n  warning: false \n  freeze: true  \n---\n\n\n\n# Visualising Uncertainty\n\n## [4-3.1]{style=\"color:skyblue\"} Learning Outcome\n\nIn this chapter, we will do hands-on in creating statistical graphics for visualising uncertainty.\n\n-   to plot statistics error bars by using `ggplot2`\n-   to plot interactive error bars by combining `ggplot2`, `plotly` and `DT`\n-   to create advanced using `ggdist`\n-   to create hypothetical outcome plots (HOPs) with `ungeviz` package\n\n## [4-3.2]{style=\"color:skyblue\"} Getting Started\n\n### [4-3.2.1]{style=\"color:skyblue\"} Installing and loading packages\n\nThe following R packages will be used for this exercise:\n\n-   `tidyverse`: a family of R packages for data science process\n\n-   `plotly`: can create interactive plot\n\n-   `gganimate`: can create animation plot\n\n-   `DT`: can display interactive HTML table\n\n-   `crosstalk`: to implement cross-widget interactions (currently linked brushing and filtering)\n\n-   `ggdist`: to visualise distribution and uncertainty\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::install_github(\"wilkelab/ungeviz\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ungeviz, plotly, corsstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n```\n:::\n\n\n\n### [4-3.2.2]{style=\"color:skyblue\"} Importing data\n\nThe *Exam_data.csv* dataset will be used for this exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\n## [4-3.3]{style=\"color:skyblue\"} Visualising the uncertainty of point estimates: ggplot2 methods\n\nA **point estimate** is a single number, such as a mean score. **Uncertainty**, is expressed as standard error, confidence interval, or credible interval. Don't confuse the uncertainty of a point estimate with the variation in the sample.\n\nNow, we will plot error bars of MATHS scores by RACE using the data provided in *exam* tibble data frame.\n\nCode below will be used to derive the necessary summary statistics:\n\n:::: panel-tabset\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_sum <- exam %>%\n  #group the observation by RACE; group_by() from dplyr package\n  group_by(RACE) %>% \n  \n  #compute the count of observations, mean, standard deviation\n  summarise( \n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n  ) %>%\n  \n  #derive standard error of Maths by RACE\n  mutate(se=sd/sqrt(n-1)) \n```\n:::\n\n\n\nThe output is saved as a tibble data table called *my_sum*.\n\n::: callout-note\n## Summary of code above\n\n-   `group_by()` from **dplyr** package is used to group the observation by RACE\n-   `summarise()` is used to compute count of observations, mean, standard deviation\n-   `mutate()` is used to derive standard error of MATHS by RACE\n:::\n\n## Mathematics\n\n![](images/SD%20calc.png)\n::::\n\nðŸ”‘ðŸ”‘ðŸ”‘ Next code is used to display *my_sum* tibble data frame in an HTML table format.\n\n::: panel-tabset\n## Code\n\n``` r\nknitr:::kable(head(my_sum),\n              format = 'html')\n```\n\n## Table\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> RACE </th>\n   <th style=\"text-align:right;\"> n </th>\n   <th style=\"text-align:right;\"> mean </th>\n   <th style=\"text-align:right;\"> sd </th>\n   <th style=\"text-align:right;\"> se </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Chinese </td>\n   <td style=\"text-align:right;\"> 193 </td>\n   <td style=\"text-align:right;\"> 76.50777 </td>\n   <td style=\"text-align:right;\"> 15.69040 </td>\n   <td style=\"text-align:right;\"> 1.132357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Indian </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 60.66667 </td>\n   <td style=\"text-align:right;\"> 23.35237 </td>\n   <td style=\"text-align:right;\"> 7.041005 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Malay </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 57.44444 </td>\n   <td style=\"text-align:right;\"> 21.13478 </td>\n   <td style=\"text-align:right;\"> 2.043177 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Others </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 69.66667 </td>\n   <td style=\"text-align:right;\"> 10.72381 </td>\n   <td style=\"text-align:right;\"> 3.791438 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n### [4-3.3.1]{style=\"color:skyblue\"} Plotting standard error bars of point estimates\n\nNow, plotting the standard error bars for the mean score of MATHS by RACE.\n\n:::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04_3_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n::: callout-note\n## Summary of code above\n\n-   The error bars are computed by using the formula `mean +/- se`\n-   For `geom_point()`, it is important to indicate `stat=\"identity\"`\n:::\n\n## Code\n\n``` r\nggplot(my_sum) + \n  geom_errorbar(\n    aes(x = RACE,\n        ymin=mean-se,\n        ymax=mean+se),\n    width = 0.2,\n    colour = \"blue\",\n    alpha = 0.9,\n    size = 0.5\n  ) +\n  geom_point(\n    aes(x = RACE,\n        y = mean),\n    stat = \"identity\",\n    color = \"red\",\n    size = 2.5,\n    alpha = 1\n  ) +\n  ggtitle(\"Standard Error of Mean MATHS Score by RACE\")\n```\n::::\n\n### [4-3.3.2]{style=\"color:skyblue\"} Plotting confidence interval of point estimates\n\nInstead of plotting error bars of point estimates, we can also plot **Confidence Intervals** of the mean scores of MATHS by RACE.\n\n:::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex04_3_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n``` r\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x = reorder(RACE, -mean),\n        ymin=mean-1.96*se,\n        ymax=mean+1.96*se),\n    width=0.2,\n    colour=\"darkgreen\",\n    alpha=0.9,\n    size=1\n  ) + \n  geom_point(aes(\n    x = RACE,\n    y = mean),\n    stat=\"identity\",\n    color=\"red\",\n    alpha=1,\n    size=5\n    ) +\n  labs(x = \"MATHS score\",\n       title = \"95% Confidence Interval of Mean MATHS Score by RACE\")\n```\n\n::: callout-note\n## Summary of code\n\n-   The Confidence Intervals are computed by using the formula mean +/- 1.96\\*se\n-   The error bars are sorted using the average maths scores\n-   `labs()` argument of `ggplot2` is used to change the x-axis label\n:::\n::::\n\n### [4-3.3.3]{style=\"color:skyblue\"} Visualising the uncertainty of point estimates with interactive error bars\n\n## [4-3.4]{style=\"color:skyblue\"} Visualsing Undertainty: `ggdist` package\n\n### [4-3.4.1]{style=\"color:skyblue\"} Visualising the uncertainty of point estimates: `ggdist` methods (I)\n\n### [4-3.4.2]{style=\"color:skyblue\"} Practice\n\n### [4-3.4.3]{style=\"color:skyblue\"} Visualising the uncertainty of point estimates: `ggdist` methods (II)\n\n## [4-3.5]{style=\"color:skyblue\"} **Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)**\n",
    "supporting": [
      "Hands-on_Ex04_3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}