{
  "hash": "7fd44119778c1dec74c6977696bdfbcd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on_Ex05-2\"\nauthor: \"Cathy C.\"\ndate-modified: \"last-modified\" \nexecute:\n  echo: true \n  eval: true \n  warning: false \n  freeze: true \n---\n\n\n\n\n# **Visual Correlation Analysis**\n\n## 1 Overview\n\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coefficient of 0.0 shows no linear relationship between the two variables.\n\nWhen multivariate data are used, the correlation coefficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\n\nWhen the data is large, both in terms of the number of observations and the number of variables, [Corrgram](http://www.datavis.ca/papers/corrgram.pdf) tend to be used to visually explore and analyse the structure and the patterns of relations among variables.\n\nWe will learn:\n\n1.  How to create correlation matrix using *`pairs()`* of R Graphics.\n2.  How to plot corrgram using **corrplot** package of R.\n3.  How to create an interactive correlation matrix using plotly R.\n\n## 2 Getting started\n\n::: panel-tabset\n## Install & launch R packages\n\nUse the code below to install and launch corrplot, ggpubr, plotly and tidyverse in R studio.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n```\n:::\n\n\n\n\n## Import data\n\nIn this hands-on exercise, the [Wine Quality Data Set](https://archive.ics.uci.edu/ml/datasets/wine+quality) of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called *wine_quality* and is in csv file format.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwine <- read_csv(\"data/wine_quality.csv\")\n```\n:::\n\n\n\n\nBeside quality and type, the test of the variables are numerical and continuous data type.\n\nUse glimpse() to have a look at the columns run down the page, and data runs across.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(wine)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 6,497\nColumns: 13\n$ `fixed acidity`        <dbl> 7.4, 7.8, 7.8, 11.2, 7.4, 7.4, 7.9, 7.3, 7.8, 7…\n$ `volatile acidity`     <dbl> 0.700, 0.880, 0.760, 0.280, 0.700, 0.660, 0.600…\n$ `citric acid`          <dbl> 0.00, 0.00, 0.04, 0.56, 0.00, 0.00, 0.06, 0.00,…\n$ `residual sugar`       <dbl> 1.9, 2.6, 2.3, 1.9, 1.9, 1.8, 1.6, 1.2, 2.0, 6.…\n$ chlorides              <dbl> 0.076, 0.098, 0.092, 0.075, 0.076, 0.075, 0.069…\n$ `free sulfur dioxide`  <dbl> 11, 25, 15, 17, 11, 13, 15, 15, 9, 17, 15, 17, …\n$ `total sulfur dioxide` <dbl> 34, 67, 54, 60, 34, 40, 59, 21, 18, 102, 65, 10…\n$ density                <dbl> 0.9978, 0.9968, 0.9970, 0.9980, 0.9978, 0.9978,…\n$ pH                     <dbl> 3.51, 3.20, 3.26, 3.16, 3.51, 3.51, 3.30, 3.39,…\n$ sulphates              <dbl> 0.56, 0.68, 0.65, 0.58, 0.56, 0.56, 0.46, 0.47,…\n$ alcohol                <dbl> 9.4, 9.8, 9.8, 9.8, 9.4, 9.4, 9.4, 10.0, 9.5, 1…\n$ quality                <dbl> 5, 5, 5, 6, 5, 5, 5, 7, 7, 5, 5, 5, 5, 5, 5, 5,…\n$ type                   <chr> \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\"…\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## 3 Build Correlation Matrix: `pairs()` method\n\nWe will use pairs function of R Graphics to create a scatterplot matrix. There are many other ways to do so, too. See pairs *function.*\n\n::: column-margin\n### Usage\n\n``` r\npairs(x, ...)\n\n## S3 method for class 'formula'\npairs(formula, data = NULL, ..., subset,\n      na.action = stats::na.pass)\n\n## Default S3 method:\npairs(x, labels, panel = points, ...,\n      horInd = 1:nc, \n      verInd = 1:nc,\n      lower.panel = panel, \n      upper.panel = panel,\n      diag.panel = NULL, \n      text.panel = textPanel,\n      label.pos = 0.5 + has.diag/3, \n      line.main = 3,\n      cex.labels = NULL, font.labels = 1,\n      row1attop = TRUE, gap = 1, \n      log = \"\",\n      horOdd = !row1attop, \n      verOdd = !row1attop)\n```\n:::\n\n### 3.1 Build a basic correlation matrix\n\nFigure below shows the scatterplot matrix of Wine Quality Data: 11x11 matrix.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\npairs(wine[,1:11],\n      main = \"Correlation Matrix\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nFigure below shows scatterplot matrix with different variables columns 2 to 12 of wine dataframe: fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates and alcohol.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\npairs(wine[,2:12],\n      main = \"Correlation Matrix with 2:12 vars\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\nFigure below shows scatterplot matrix with chosen variables: total sulfur dioxide, density, pH, sulphates and alcohol.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\npairs(wine[, c(\"total sulfur dioxide\", \"density\", \"pH\", \"sulphates\", \"alcohol\")],\n      main = \"Correlation Matrix with 2:12 vars\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n### 3.2 Draw the lower corner\n\nTo show the lower half of the correlation matrix, the `upper.panel`argument will be used as shown in the code chunk below.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\npairs(wine[,2:12], upper.panel = NULL)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can also display the upper half.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\npairs(wine[,2:12], lower.panel = NULL)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n### 3.3 Include correlation coefficients\n\nTo show the correlation coefficient of each pair of variables instead of a scatter plot, [*panel.cor*](https://www.rdocumentation.org/packages/xcms/versions/1.48.0/topics/panel.cor) function will be used. This will also show higher correlations in a larger font.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\npanel.cor <- function(x, y, digits = 2, prefix = \"\", cex.cor, ...) {\n  usr <- par(\"usr\")\n  on.exit(par(usr))\n  par(usr = c(0, 1, 0 , 1))\n  r <- abs(cor(x, y, use = \"complete.obs\"))\n  txt <- format(c(r, 0.123456789), digits = digits)[1]\n  text <- paste(prefix, txt, sep = \"\")\n  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\n  text(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[, 2:12],\n      upper.panel = panel.cor)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n## 4 Visualise Correlation Matrix: *ggcormat()*\n\nCorrelation matrix with scatterplot can look cluttered when observations are more than 500. **Corrgram** data visualisation technique suggested by D. J. Murdoch and E. D. Chow (1996) and Friendly, M (2002) and will be used. 3 R packages will be used to plot corrgram: [corrgram](https://cran.r-project.org/web/packages/corrgram/index.html), [ellipse](https://cran.r-project.org/web/packages/ellipse/index.html) and [corrplot](https://cran.r-project.org/web/packages/corrplot/index.html).\n\nHere we will visualise correlation matrix with [*ggcorrmat()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcorrmat.html) of [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/index.html) package.\n\n### 4.1 The basic plot\n\nAdvantage of using ggcormat() over many other methods to visualise correlation matrix is its ability to provide a comprehensive and statistical report.\n\n`ggcorrmat()` uses the following default arguments:\n\n-   `matrix.type` = \"upper\"\n-   `sig.level` = 0.05\n-   `conf.level` = 0.95\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggstatsplot::ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  ggcorrplot.args = list(\n    lab_size = 2.8,\n    tl.cex = 8,\n    pch.cex = 8\n  )\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggstatsplot::ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  colors = c(\"#ed939d\", \"#fcfaf8\", \"#82afd9\"),\n  ggcorrplot.args = list(outline.color = \"black\",\n                         hc.order = TRUE,\n                         lab_size = 2.8,\n                         tl.cex = 8,\n                         pch.cex = 8),\n  title = \"Corrlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p< 0.05\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n::::: goals\n::: goals-header\nNote\n:::\n\n::: goals-container\n-   `cor.vars` argument is used to compute the correlation matrix needed to build the corrgram.\n\n-   ggcorrplot.args argument provide additional (mostly aesthetic) arguments that will be passed to **ggcorrplot::ggcorrplot** function. The list should avoid any of the following arguments since they are already internally being used: corr, `method`, `p.mat`, `sig.level`, `ggtheme`, `colors`, `lab`, `pch`, `legend.title`, `digits`.\n\n-   The sample sub-code chunk can be used to control specific component of the plot such as the font size of the x-axis, y-axis, and the statistical report.\n:::\n:::::\n\n``` r\nggplot.component = list(\n  theme(text = element_text(size = 5),\n        axis.text.x = element_text(size = 8),\n        axis.text.y = element_text(size = 8))\n)\n```\n\n## 5 Build Multiple plots\n\nggstasplot is an extension of ggplot2, so also supports faceting. However the feature is in the [*`grouped_ggcorrmat()`*](https://indrajeetpatil.github.io/ggstatsplot/reference/grouped_ggcorrmat.html) of **ggstatsplot.**\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n#| fig-width: 15\n#| fig-height: 10\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  colors = c(\"#ed939d\", \"#fcfaf8\", \"#82afd9\"),\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\",\n                         hc.order = TRUE,\n                         lab_size = 0.6,\n                         tl.cex = 7,\n                         pch.cex = 2\n                         ),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n) \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n::::: goals\n::: goals-header\nNote\n:::\n\n::: goals-container\n-   Use `fig-width` and `fig-height` to adjust the spaces.\n\n-   To build a facet plot, the only argument needed is `grouping.var`.\n\n-   Behind *group_ggcorrmat()*, **patchwork** package is used to create the multiplot. `plotgrid.args` argument provides a list of additional arguments passed to [*patchwork::wrap_plots*](https://patchwork.data-imaginist.com/reference/wrap_plots.html), except for guides argument which is already separately specified earlier.\n\n-   Likewise, `annotation.args` argument is calling [*plot annotation arguments*](https://patchwork.data-imaginist.com/reference/plot_annotation.html) of patchwork package.\n:::\n:::::\n\n## 6 Visualise Correlation Matrix Using Corrplot Pakcage\n\n🔆 Resource: [An Introduction to corrplot Package](https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html)\n\n### 6.1 Get started with corrplot\n\n1.  Compute the correlation matrix of wine data frame\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwine.cor <- cor(wine[,1:11])\n```\n:::\n\n\n\n\n1.  Use [*corrplot()*](https://www.rdocumentation.org/packages/corrplot/versions/0.2-0/topics/corrplot) to plot the corrgram by using all the default settings.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(bg = \"#f1f4f5\")\n\ncorrplot(wine.cor)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n::::: goals\n::: goals-header\nThe default settings\n:::\n\n::: goals-container\n-   visual object used to plot the coorgram: **circle**\n-   layout of the corrgram: **symmetric matrix**\n-   color scheme: **diverging blue-red**\n-   The intensity of the colour or also know as **saturation** is used to represent the *strength* of the correlation coefficient.\n-   Darker colours indicate relatively *stronger linear relationship* between the paired variables\n:::\n:::::\n\n::::: goals\n::: goals-header\nMore settings\n:::\n\n::: goals-container\n-   **`matrix.type`**: Character, **`\"full\"`** (default), **`\"upper\"`** or **`\"lower\"`**, display full matrix, lower triangular or upper triangular matrix.\n-   **`method`**: Character argument that decides the visualization method of correlation matrix to be used. Allowed values are **`square`** (default), **`circle`**\n-   **`corr.method`**: A character string indicating which correlation coefficient is to be computed (**`pearson`** (default) or **`kendall`** or **`spearman`**). **`robust`** can also be entered but only if **`output`** argument is set to either **`correlations`** or **`p-values`**. The robust correlation used is percentage bend correlation (see **`?WRS2::pball`**). Abbreviations will also work: **`\"p\"`** (for parametric/Pearson's *r*), **`\"np\"`** (nonparametric/Spearman's *rho*), **`r`** (robust).\n-   **`digits`**: Decides the number of decimal digits to be displayed (Default: **`2`**)\n-   **`sig.level`**: Significance level (Default: **`0.05`**). If the *p*-value in *p*-value matrix is bigger than **`sig.level`**, then the corresponding correlation coefficient is regarded as insignificant and flagged as such in the plot. This argument is relevant only when **`output = \"plot\"`**.\n-   **`ggtheme`**:\\\n    A function, **`ggplot2`** theme name. Default value is **`ggplot2::theme_bw()`**. Any of the **`ggplot2`** themes, or themes from extension packages are allowed (e.g., **`ggthemes::theme_fivethirtyeight()`**, **`hrbrthemes::theme_ipsum_ps()`**, etc.).\n-   **`subtitle`**: The text for the plot subtitle.\n-   **`lab.col`**: Color to be used for the correlation coefficient labels (applicable only when **`lab = TRUE`**).\n-   **`lab.size`**: Size to be used for the correlation coefficient labels (applicable only when **`lab = TRUE`**).\n-   **`messages`**: Decides whether messages references, notes, and warnings are to be displayed (Default: **`TRUE`**).\n-   `outline` = to draw the black outline of the correlation objects such as circles or squares.\n-   `addgrid.col` = to determine the color of the grids. Would dissapear if NA.\n-   `order` = the order of the columns. If not specified it is plotted as in the original matrix, but sometimes it is not so informative. Possible methods are: “AOE” (angular order of the eigenvectors), “FPC” (first principal component), “hclust”, “alphabet”. There is also hclust.method to determine the agglomeration method if the order is “hclust”.\n-   `addrect` = when the order is “hclust”, determines the number of rectangles according to the hierarchical cluster. rect.something arguments are about the rectangles added according to this argument.\n-   `cl.something` = these are the arguments about the color legend.\n-   `tl.something` = these are the arguments about the text labels.\n:::\n:::::\n\n### 6.2 Work with visual geometrics\n\nIn **corrplot** package, there are seven visual geometrics (parameter method) can be used to encode the attribute values. They are: *circle, square, ellipse, number, shade, color and pie*. The default is circle, like the figure in 6.1.\n\nThe default setting can be changed by using the ***method*** argument. See the code below:\n\n::: panel-tabset\n## ellipse\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"ellipse\",\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         title = \"Correlation Plot with Ellipse\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n## square\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"square\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n## number\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"number\",\n         number.cex = 0.65,\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         title = \"Correlation Plot with Number\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n## shade\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"shade\",\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         title = \"Correlation Plot with Shade\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n## color\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"color\",\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         title = \"Correlation Plot with Color\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n\n## pie\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"pie\",\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         title = \"Correlation Plot with Pie\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n## `addrect`\n\n`addrect` argument sets the value in numbers representing the number of clusters.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\ncorrplot(wine.cor,\n         method = \"ellipse\",\n         outline = T,\n         addgrid.col = \"darkgray\",\n         order=\"hclust\",\n         addrect = 4,   \n         rect.col = \"black\",\n         rect.lwd = 5,\n         cl.pos = \"b\",\n         tl.col = \"indianred4\",\n         tl.cex = 0.6,\n         tl.srt = 45,\n         bg = \"#f1f4f5\",\n         #addCoef.col = \"white\",\n         #number.digits = 2,\n         #number.cex = 0.75,\n         title=\"Correlation Plot with Ellipses and Clusters\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n### 6.3 Work with layout\n\n*corrplor()* supports three layout types, namely: **full, upper** or **lower**. The default is **full** which display full matrix. The default setting can be changed by using the ***type*** argument of *corrplot()*.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"ellipse\",\n         type = \"lower\",\n         tl.srt = 45,\n         title = \"Correlation Plot - Lower Type\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n\n-   To turn off the diagonal cells: `diag`\n\n-   To change the axis text label colour: `tl.col`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"ellipse\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.cex = 0.5,\n         tl.offset = 1.5,\n         tl.srt = 45,\n         cl.cex = 0.5,\n         cl.offset = 1,\n         title = \"Correlation Plot - Text Label in Black\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n### 6.4 Work with mixed layout\n\nTo create a coorgram with mixed layout, the [*corrplot.mixed()*](https://www.rdocumentation.org/packages/corrplot/versions/0.84/topics/corrplot.mixed), a wrapped function for mixed visualisation style will be used.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\ncorrplot.mixed(wine.cor,\n               lower = \"ellipse\",\n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               tl.cex = 0.6,\n               tl.srt = 45,\n               number.cex = 0.5)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\nNote that argument *lower* and *upper* are used to define the visualisation method used. In this case ellipse is used to map the lower half of the corrgram and numerical matrix (i.e. number) is used to map the upper half of the corrgram.\n\nThe argument *tl.pos*, on the other, is used to specify the placement of the axis label.\n\nLastly, the *diag* argument is used to specify the glyph on the principal diagonal of the corrgram.\n\n### 6.5 Combine corrgram with the significant test\n\nWe are also interested to know which pair of variables their correlation coefficient are statistically significant. Figure below shows a corrgram combined with the significant test. The corrgram reveals that not all correlation pairs are statistically significant.\n\nWith corrplot package, we can use the *cor.mtest()* to compute the p-values and confidence interval for each pair of variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwine.sig = cor.mtest(wine.cor,\n                     conf.level = .95)\n```\n:::\n\n\n\n\nWe can then use the *p.mat* argument of *corrplot* function as shown in the code chunk below.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         tl.cex = 0.6,\n         number.cex = 0.7,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n\n### 6.6 Reorder a corrgram\n\nMatrix reorder is very important for mining the hiden structure and pattern in a corrgram. By default, the order of attributes of a corrgram is sorted according to the correlation matrix (i.e. “original”). The default setting can be over-write by using the *order* argument of *corrplot()*. Currently, **corrplot** package support four sorting methods, they are:\n\n-   “AOE” is for the angular order of the eigenvectors. See [Michael Friendly (2002)](chrome-extension://efaidnbmnnnibpcajpcglclefindmkaj/https://www.datavis.ca/papers/corrgram.pdf) for details.\n-   “FPC” for the first principal component order.\n-   “hclust” for hierarchical clustering order, and “hclust.method” for the agglomeration method to be used. It should be one of “ward”, “single”, “complete”, “average”, “mcquitty”, “median” or “centroid”.\n-   “alphabet” for alphabetical order. “AOE”, “FPC”, “hclust”, “alphabet”. More algorithms can be found in **seriation** package.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               tl.srt = 45,\n               tl.cex = 0.6,\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n\n::: column-margin\n-   [`ggcormat()`](https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/ggcorrmat.html) of [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/index.html) package\n\n-   [`ggscatmat`](https://ggobi.github.io/ggally/reference/ggscatmat.html) and [`ggpairs`](https://ggobi.github.io/ggally/reference/ggpairs.html) of [**GGally**](https://ggobi.github.io/ggally/index.html).\n\n-   [**corrplot**](https://cran.r-project.org/web/packages/corrplot/index.html). A graphical display of a correlation matrix or general matrix. It also contains some algorithms to do matrix reordering. In addition, corrplot is good at details, including choosing color, text labels, color labels, layout, etc.\n\n-   [**corrgram**](https://cran.r-project.org/web/packages/corrgram/index.html) calculates correlation of variables and displays the results graphically. Included panel functions can display points, shading, ellipses, and correlation values with confidence intervals.\n:::\n\n### 6.7 Reorder a correlation matrix using hclust\n\nIf using **hclust**, ***`corrplot()`***can draw rectangles around the corrgram based on the results of hierarchical clustering. `addrect` indicates the number of clusters.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\ncorrplot(wine.cor,\n         method = \"ellipse\",\n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         tl.cex = 0.6,\n         tl.srt = 45,\n         order = \"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3\n         )\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\n## text labels rotated 45 degrees and  wider color legend with numbers right aligned\ncorrplot(wine.cor, \n         type = 'lower', \n         order = 'hclust', \n         tl.col = 'black',\n         tl.cex = 0.5,\n         cl.ratio = 0.2, \n         tl.srt = 45, \n         col = COL2('PuOr', 10))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\npar(bg = \"#f1f4f5\")\n\n## text labels rotated 45 degrees and  wider color legend with numbers right aligned\ncorrplot(wine.cor, \n         type = \"upper\", \n         order = \"hclust\",\n         hclust.method = \"ward.D\",\n         tl.col = 'black',\n         tl.cex = 0.5, \n         tl.srt = 45, \n         col = c('white', 'black'),\n         bg = \"gold2\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex05_2_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n\n### 7 Reference\n\nMichael Friendly (2002). “Corrgrams: Exploratory displays for correlation matrices”. *The American Statistician*, 56, 316–324.\n\nD.J. Murdoch, E.D. Chow (1996). “A graphical display of large correlation matrices”. *The American Statistician*, 50, 178–180.\n",
    "supporting": [
      "Hands-on_Ex05_2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}