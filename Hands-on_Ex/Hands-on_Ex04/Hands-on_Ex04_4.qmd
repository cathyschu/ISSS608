---
title: "Hands-on_Ex04-4"
author: "Cathy C."
date-modified: "last-modified" 
execute:
  echo: true 
  eval: true 
  warning: false 
  freeze: true 
---

# **Funnel Plots for Fair Comparisons**

## [4-4.1]{style="color:skyblue"} Overview

Funnel plot is a specially designed data visualisation for unbiased comparison between outlets, stores or business entities. We will learn the following in this chapter:

-   Plot funnel plots using `funnelPlotR` package
-   Plot static funnel plot with `ggplot2` package
-   plot interactive funnel plot by using both **`plotly R`** and **`ggplot2`** packages

## [4-4.2]{style="color:skyblue"} Install and Launch R Packages

Four R packages will be used in this exercise:

1.  **readr**: import *csv* to R
2.  **FunnerPlotR**: create funnel plot
3.  **ggplot2**: create funner plot **manually**
4.  **knitr**: build static html table
5.  **plotly**: create interactive funner plot

```{r}
pacman::p_load(tidyverse, FunnelPlotR, plotly, knitr)
```

## [4-4.3]{style="color:skyblue"} Import Data

We use a new set of data for this exercise - COVID-19_DKI_Jakarta as of 31st July 2021 from [Open Data Covid-19 Provinsi DKI Jakarta portal](https://riwayat-file-covid-19-dki-jakarta-jakartagis.hub.arcgis.com/). In this exercise, we will compare the cumulative COVID-19 cases and death by sub-district (i.e. kelurahan).

First, we import the data into R and save it into a tibble data frame object called *covid19*.

```{r}
covid19 <- read_csv("data/COVID-19_DKI_Jakarta.csv") %>%
  mutate_if(is.character, as.factor)

```

|  |  |  |  |  |  |  |
|-----------|-----------|-----------|-----------|-----------|-----------|-----------|
| **Sub-district ID** | **City** | **District** | **Sub-district** | **Positive** | **Recovered** | **Death** |
| 3172051003 | JAKARTA UTARA | PADEMANGAN | ANCOL | 1776 | 1691 | 26 |
| 3173041007 | JAKARTA BARAT | TAMBORA | ANGKE | 1783 | 1720 | 29 |
| 3175041005 | JAKARTA TIMUR | KRAMAT JATI | BALE KAMBANG | 2049 | 1964 | 31 |
| 3175031003 | JAKARTA TIMUR | JATINEGARA | BALI MESTER | 827 | 797 | 13 |
| 3175101006 | JAKARTA TIMR | CIPAYUNG | BAMBU APUS | 2866 | 2792 | 27 |
| 3174031002 | JAKARTA SELATAN | MAMPANG PRAPATAN | BANGKA | 1828 | 1757 | 26 |

: {.striped .hover}

## [4-4.4]{style="color:skyblue"} `FunnelPlotR` Methods

[**FunnelPlotR**](https://nhs-r-community.github.io/FunnelPlotR/) package uses `ggplot` to generate funner plots. It requires `numerator` (events of interest), `denominator` (population considered) and `group`. The key arguments selected for customisation are:

::: column-margin
**FunnelPlotR Installation**

``` r
install.packages("FunnelPlotR")
```
:::

-   `limit`: plot limits (95 or 99)
-   `label_outliers`: to label outliers (true or false)
-   `Poisson_limits`: to add Poisson limits to the plot
-   `OD_adjust`: to add overdispersed limits to the plot
-   `xrange` and `yrange`: to specify the range to display for axes, acts like a zoom function
-   Other aesthetic components, such as `graph title`, `axis labels` etc.

### [4-4.4.1]{style="color:skyblue"} `FunnelPlotR` methods: Basic plot

The code below plots a funnel plot.

```{r}
funnel_plot(
  .data = covid19,
  numerator = Death,
  denominator = Positive,
  group = `Sub-district`
)
```

::: callout-tip
## Things to learn

-   `group` in this function is different from the scatterplot. Here is defines the level of the points to be plotted, ie., Sub-district, District or City. If City is chosen, there are only six data points.
-   By default, `data_type` argument is "SR".
-   `limit`: Plot limits, accepted values are 95 or 99, corresponding to 95% or 99% quantiles of the distribution.
:::

### [4-4.4.2]{style="color:skyblue"} `FunnelPlotR` methods: Makeover 1

Adjust code to make over the previous plot.

```{r}
funnel_plot(
  .data = covid19,
  numerator = Death,
  denominator = Positive,
  group = `Sub-district`,
  data_type = "PR",
  xrange = c(0, 6500),
  yrange = c(0, 0.05)
)
```

::: callout-note
## Things to learn from the code

-   \+`data_type` argument is used to change from default "SR" to "PR" (i.e., proportions).

-   \+`xrange` and `yrange` are used to set the range of x-axis and y-axis.
:::

### [4-4.4.3]{style="color:skyblue"} `FunnelPlotR` methods: Makeover 2

## [4-4.5]{style="color:skyblue"} Funnel Plot for Fair Visual Comparison: `ggplot2` methods

### [4-4.5.1]{style="color:skyblue"} Computing the basic derived fields

### [4-4.5.2]{style="color:skyblue"} Calculate lower and upper limits for 95% and 99.9% CI

### [4-4.5.3]{style="color:skyblue"} Plot a static funnel plot

### [4-4.5.4]{style="color:skyblue"} Interactive funnel plot: `plotly` + `ggplot2`

## [4-4.6]{style="color:skyblue"} References
